{"ast":null,"code":"import _defineProperty from \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Shop.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"../css/Shop.css\";\nimport ProductGrid from \"./ProductGrid\";\nimport Cart from \"./Cart\";\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = item => {\n      if (this.state.cartContents.some(el => item.name === el.name)) {\n        let index = this.state.cartContents.findIndex(el => el.name === item.name);\n        let updatedContents = [...this.state.cartContents];\n        updatedContents[index] = _objectSpread({}, updatedContents[index], {\n          quantity: parseFloat(updatedContents[index].quantity) + parseFloat(item.quantity)\n        });\n        this.setState({\n          cartContents: updatedContents\n        });\n      } else {\n        this.setState(state => ({\n          cartContents: [...state.cartContents, item]\n        }));\n      }\n    };\n\n    this.removeFromCart = item => {\n      this.setState(state => ({\n        cartContents: state.cartContents.filter(el => el.name !== item.name)\n      }));\n    };\n\n    this.state = {\n      cartContents: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ProductGrid, {\n      list: this.props.list,\n      isInCart: false,\n      onSubmit: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Cart, {\n      contents: this.state.cartContents,\n      onSubmit: this.removeFromCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Shop.js"],"names":["React","ProductGrid","Cart","Shop","Component","constructor","props","addToCart","item","state","cartContents","some","el","name","index","findIndex","updatedContents","quantity","parseFloat","setState","removeFromCart","filter","render","list"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,SAPmB,GAONC,IAAD,IAAU;AACpB,UAAI,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,CAA6BC,EAAE,IAAIJ,IAAI,CAACK,IAAL,KAAcD,EAAE,CAACC,IAApD,CAAJ,EAA+D;AAC7D,YAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWC,YAAX,CAAwBK,SAAxB,CAAkCH,EAAE,IAAIA,EAAE,CAACC,IAAH,KAAYL,IAAI,CAACK,IAAzD,CAAZ;AACA,YAAIG,eAAe,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,YAAf,CAAtB;AACAM,QAAAA,eAAe,CAACF,KAAD,CAAf,qBAA8BE,eAAe,CAACF,KAAD,CAA7C;AAAsDG,UAAAA,QAAQ,EAAEC,UAAU,CAACF,eAAe,CAACF,KAAD,CAAf,CAAuBG,QAAxB,CAAV,GAA8CC,UAAU,CAACV,IAAI,CAACS,QAAN;AAAxH;AACA,aAAKE,QAAL,CAAc;AAAET,UAAAA,YAAY,EAAEM;AAAhB,SAAd;AACD,OALD,MAKO;AACL,aAAKG,QAAL,CAAcV,KAAK,KAAK;AACtBC,UAAAA,YAAY,EAAE,CAAC,GAAGD,KAAK,CAACC,YAAV,EAAwBF,IAAxB;AADQ,SAAL,CAAnB;AAGD;AACF,KAlBkB;;AAAA,SAoBnBY,cApBmB,GAoBDZ,IAAD,IAAU;AACzB,WAAKW,QAAL,CAAcV,KAAK,KAAK;AACtBC,QAAAA,YAAY,EAAED,KAAK,CAACC,YAAN,CAAmBW,MAAnB,CAA0BT,EAAE,IAAIA,EAAE,CAACC,IAAH,KAAYL,IAAI,CAACK,IAAjD;AADQ,OAAL,CAAnB;AAGD,KAxBkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAqBDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWiB,IAA9B;AAAoC,MAAA,QAAQ,EAAE,KAA9C;AAAqD,MAAA,QAAQ,EAAE,KAAKhB,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC,YAA3B;AAAyC,MAAA,QAAQ,EAAE,KAAKU,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD;;AAtCgC;;AAyCnC,eAAejB,IAAf","sourcesContent":["import React from \"react\";\nimport \"../css/Shop.css\";\nimport ProductGrid from \"./ProductGrid\";\nimport Cart from \"./Cart\";\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartContents: [],\n    };\n  }\n\n  addToCart = (item) => {\n    if (this.state.cartContents.some(el => item.name === el.name)) {\n      let index = this.state.cartContents.findIndex(el => el.name === item.name);\n      let updatedContents = [...this.state.cartContents];\n      updatedContents[index] = { ...updatedContents[index], quantity: parseFloat(updatedContents[index].quantity) + parseFloat(item.quantity) }\n      this.setState({ cartContents: updatedContents });\n    } else {\n      this.setState(state => ({\n        cartContents: [...state.cartContents, item]\n      }))\n    }\n  }\n\n  removeFromCart = (item) => {\n    this.setState(state => ({\n      cartContents: state.cartContents.filter(el => el.name !== item.name)\n    }))\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"cards-container\">\n          <ProductGrid list={this.props.list} isInCart={false} onSubmit={this.addToCart} />\n        </div>\n        <div className=\"cart-container\">\n          <Cart contents={this.state.cartContents} onSubmit={this.removeFromCart} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}