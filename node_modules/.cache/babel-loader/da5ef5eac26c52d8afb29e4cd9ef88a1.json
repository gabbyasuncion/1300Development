{"ast":null,"code":"var _jsxFileName = \"/Users/mirandamo/Documents/3rd_Year/TA_CS1300/1300Development/src/components/ProductGrid.js\";\nimport React from \"react\";\n/**\n * This class maps each item in your products list to individual Product Cards. \n */\n\nclass ProductGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  /**\n   * TODO: Create a new .js class that styles each item, then map each item from this.props.list from Shop to a Product Card.\n   *\n   */\n\n\n  productGrid() {\n    const grid = this.props.list.map(item => {\n      // Can you receive the addToCart and removeFromCart functions as the same prop? This might be helpful when you use isInCart to check whether\n      // the item is in the cart or not, and render certain buttons accordingly in the Product Cart component.\n      // Maybe also create a quantity prop that checks: if the item is in the cart, then it keeps its quantity; else, it's quantity is one.\n      return React.createElement(\"li\", {\n        key: item.name,\n        isInCart: this.props.isInCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, item.name, \", \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, item.size), \" \");\n    });\n    return grid;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.productGrid());\n  }\n\n}\n\nexport default ProductGrid;","map":{"version":3,"sources":["/Users/mirandamo/Documents/3rd_Year/TA_CS1300/1300Development/src/components/ProductGrid.js"],"names":["React","ProductGrid","Component","constructor","props","state","productGrid","grid","list","map","item","name","isInCart","size","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;AAGA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAED;AAED;;;;;;AAIAC,EAAAA,WAAW,GAAG;AACZ,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,IAAI;AACvC;AACA;AAEA;AACA,aAAO;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAoB,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoDF,IAAI,CAACC,IAAzD,QAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASD,IAAI,CAACG,IAAd,CAAhE,MAAP;AACD,KANY,CAAb;AAOA,WAAON,IAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,WAAL,EADH,CADF;AAKD;;AA5BuC;;AA+B1C,eAAeL,WAAf","sourcesContent":["import React from \"react\";\n\n/**\n * This class maps each item in your products list to individual Product Cards. \n */\nclass ProductGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  /**\n   * TODO: Create a new .js class that styles each item, then map each item from this.props.list from Shop to a Product Card.\n   *\n   */\n  productGrid() {\n    const grid = this.props.list.map(item => {\n      // Can you receive the addToCart and removeFromCart functions as the same prop? This might be helpful when you use isInCart to check whether\n      // the item is in the cart or not, and render certain buttons accordingly in the Product Cart component.\n\n      // Maybe also create a quantity prop that checks: if the item is in the cart, then it keeps its quantity; else, it's quantity is one.\n      return <li key={item.name} isInCart={this.props.isInCart}>{item.name}, <strong>{item.size}</strong> </li>\n    });\n    return grid;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.productGrid()}\n      </div>\n    )\n  }\n}\n\nexport default ProductGrid;"]},"metadata":{},"sourceType":"module"}