{"ast":null,"code":"import _defineProperty from \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Shop.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"../css/Shop.css\";\nimport ProductGrid from \"./ProductGrid\";\nimport Cart from \"./Cart\";\nimport Header from \"./Header\";\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props); //The state is just a list of key/value pairs (like a hashmap)\n\n    this.onSelectFilterSize = event => {\n      this.setState({\n        size: event\n      });\n    };\n\n    this.onSelectFilterLight = event => {\n      this.setState({\n        light: event\n      });\n    };\n\n    this.matchesFilterSize = item => {\n      if (this.state.size === \"Size\") {\n        return true;\n      } else if (this.state.size === item.size) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.matchesFilterLight = item => {\n      if (this.state.light === \"Light\") {\n        return true;\n      } else if (this.state.light === item.light) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.filterItems = item => {\n      return this.matchesFilterSize(item) && this.matchesFilterLight(item);\n    };\n\n    this.sortLowToHigh = (a, b) => a.price > b.price ? 1 : -1;\n\n    this.sortHighToLow = (a, b) => a.price < b.price ? 1 : -1;\n\n    this.onPriceLowToHigh = () => {\n      let lowToHigh = \"Lowest to Highest\";\n      this.setState({\n        sortPrice: this.sortLowToHigh\n      });\n      this.setState({\n        priceTitle: lowToHigh\n      });\n    };\n\n    this.onPriceHighToLow = () => {\n      let highToLow = \"Highest to Lowest\";\n      this.setState({\n        sortPrice: this.sortHighToLow\n      });\n      this.setState({\n        priceTitle: highToLow\n      });\n    };\n\n    this.onPriceSelect = () => {\n      let select = \"Select\";\n      this.setState({\n        sortPrice: undefined\n      });\n      this.setState({\n        priceTitle: select\n      });\n    };\n\n    this.addToCart = item => {\n      let updatedContents;\n\n      if (this.state.cartContents.some(el => item.name === el.name)) {\n        let index = this.state.cartContents.findIndex(el => el.name === item.name);\n        updatedContents = [...this.state.cartContents];\n        updatedContents[index] = _objectSpread({}, updatedContents[index], {\n          quantity: parseFloat(updatedContents[index].quantity) + parseFloat(item.quantity)\n        });\n        this.setState({\n          cartContents: updatedContents\n        });\n      } else {\n        updatedContents = [...this.state.cartContents, item];\n        this.setState({\n          cartContents: updatedContents\n        });\n      } // {console.log(\"newest cart\" + this.state.cartContents[0])} ===> when item is first added to cart, it is undefined; the second time it is added to cart, it exists as index 0.\n\n\n      this.calculateTotal(updatedContents);\n    };\n\n    this.removeFromCart = item => {\n      const updatedContents = this.state.cartContents.filter(el => el.name !== item.name);\n      this.setState({\n        cartContents: updatedContents\n      });\n      this.calculateTotal(updatedContents);\n    };\n\n    this.onDecrease = item => {\n      const itemObject = this.state.cartContents.find(obj => obj.name === item);\n\n      if (itemObject.quantity > 1) {\n        const ind = this.state.cartContents.indexOf(itemObject);\n        this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity - 1;\n      }\n    };\n\n    this.onIncrease = item => {\n      const itemObject = this.state.cartContents.find(obj => obj.name === item);\n      const ind = this.state.cartContents.indexOf(itemObject);\n      this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity + 1;\n    };\n\n    this.calculateTotal = contents => {\n      this.setState({\n        total: contents.reduce((accumulatedTotal, cartItem) => accumulatedTotal + cartItem.price * cartItem.quantity, 0)\n      });\n    };\n\n    this.state = {\n      cartContents: [],\n      size: \"Size\",\n      light: \"Light\",\n      sortPrice: undefined,\n      priceTitle: \"Select\",\n      total: 0\n    };\n  } //Called every time a new size filter type is selected in the dropdown.\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onSelectFilterSize: this.onSelectFilterSize,\n      onSelectFilterLight: this.onSelectFilterLight,\n      onPriceLowToHigh: this.onPriceLowToHigh,\n      onPriceHighToLow: this.onPriceHighToLow,\n      onPriceSelect: this.onPriceSelect,\n      priceTitle: this.state.priceTitle,\n      handlePriceTitle: this.handleSortPriceTitle,\n      size: this.state.size,\n      light: this.state.light,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), this.props.list.filter(this.filterItems).length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(ProductGrid, {\n      list: this.props.list.filter(this.filterItems).sort(this.state.sortPrice),\n      isInCart: false,\n      onSubmit: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"No results match the filters :(\"))), React.createElement(\"div\", {\n      className: \"cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Cart, {\n      contents: this.state.cartContents,\n      subtotal: this.state.total,\n      onSubmit: this.removeFromCart,\n      onIncrease: this.onIncrease,\n      onDecrease: this.onDecrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Shop.js"],"names":["React","ProductGrid","Cart","Header","Shop","Component","constructor","props","onSelectFilterSize","event","setState","size","onSelectFilterLight","light","matchesFilterSize","item","state","matchesFilterLight","filterItems","sortLowToHigh","a","b","price","sortHighToLow","onPriceLowToHigh","lowToHigh","sortPrice","priceTitle","onPriceHighToLow","highToLow","onPriceSelect","select","undefined","addToCart","updatedContents","cartContents","some","el","name","index","findIndex","quantity","parseFloat","calculateTotal","removeFromCart","filter","onDecrease","itemObject","find","obj","ind","indexOf","onIncrease","contents","total","reduce","accumulatedTotal","cartItem","render","handleSortPriceTitle","list","length","sort"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../css/Shop.css\";\nimport ProductGrid from \"./ProductGrid\";\nimport Cart from \"./Cart\";\nimport Header from \"./Header\"\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n    //The state is just a list of key/value pairs (like a hashmap)\n    this.state = {\n      cartContents: [],\n      size: \"Size\",\n      light: \"Light\",\n      sortPrice: undefined,\n      priceTitle: \"Select\",\n      total: 0\n    };\n  }\n\n  //Called every time a new size filter type is selected in the dropdown.\n  onSelectFilterSize = event => {\n    this.setState({ size: event })\n  };\n\n    //Called every time a new lighting filter type is selected in the dropdown.\n  onSelectFilterLight = event => {\n    this.setState({ light: event })\n  };\n\n  // Determine whether the item being passed in matches the type that we are filtering on\n  matchesFilterSize = item => {\n    if (this.state.size === \"Size\") {\n      return true\n    } else if (this.state.size === item.size) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  matchesFilterLight = item => {\n    if (this.state.light === \"Light\") {\n      return true\n    } else if (this.state.light === item.light) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  filterItems = item => {\n    return this.matchesFilterSize(item) && this.matchesFilterLight(item);\n  }\n\n  sortLowToHigh = (a, b) => (a.price > b.price) ? 1 : -1\n  sortHighToLow = (a, b) => (a.price < b.price) ? 1 : -1\n\n  onPriceLowToHigh = () => {\n    let lowToHigh = \"Lowest to Highest\";\n    this.setState({ sortPrice: this.sortLowToHigh });\n    this.setState({ priceTitle: lowToHigh })\n  }\n\n  onPriceHighToLow = () => {\n    let highToLow = \"Highest to Lowest\";\n    this.setState({ sortPrice: this.sortHighToLow });\n    this.setState({ priceTitle: highToLow })\n  }\n\n  onPriceSelect = () => {\n    let select = \"Select\";\n    this.setState({ sortPrice: undefined });\n    this.setState({ priceTitle: select })\n  }\n\n\n  // TODO: When an item is added to cart, make it so that it immediately exists in the this.state.cartContents array\n  addToCart = (item) => {\n    let updatedContents;\n    if (this.state.cartContents.some(el => item.name === el.name)) {\n      let index = this.state.cartContents.findIndex(el => el.name === item.name);\n      updatedContents = [...this.state.cartContents];\n      updatedContents[index] = { ...updatedContents[index], quantity: parseFloat(updatedContents[index].quantity) + parseFloat(item.quantity) }\n      this.setState({ cartContents: updatedContents });\n    } else {\n      updatedContents = [...this.state.cartContents, item];\n      this.setState({\n        cartContents: updatedContents\n      })\n    }\n    // {console.log(\"newest cart\" + this.state.cartContents[0])} ===> when item is first added to cart, it is undefined; the second time it is added to cart, it exists as index 0.\n    this.calculateTotal(updatedContents);\n  }\n\n  removeFromCart = (item) => {\n    const updatedContents = this.state.cartContents.filter(el => el.name !== item.name);\n    this.setState({\n      cartContents: updatedContents\n    })\n    this.calculateTotal(updatedContents);\n  }\n\n  // TODO: In the product card, you can use the add and minus buttons to change the quantity\n  onDecrease = (item) => {\n    const itemObject = this.state.cartContents.find(obj => obj.name === item);\n    if (itemObject.quantity > 1) {\n      const ind = this.state.cartContents.indexOf(itemObject);\n      this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity - 1;\n    }\n  }\n\n  onIncrease = (item) => {\n    const itemObject = this.state.cartContents.find(obj => obj.name === item);\n    const ind = this.state.cartContents.indexOf(itemObject);\n    this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity + 1;\n  }\n\n  calculateTotal = contents => {\n    this.setState({\n      total: contents.reduce(\n        (accumulatedTotal, cartItem) =>\n          accumulatedTotal + cartItem.price * cartItem.quantity,\n        0\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"cards-container\">\n          <Header onSelectFilterSize={this.onSelectFilterSize} onSelectFilterLight={this.onSelectFilterLight} onPriceLowToHigh={this.onPriceLowToHigh} onPriceHighToLow={this.onPriceHighToLow} onPriceSelect={this.onPriceSelect} priceTitle={this.state.priceTitle} handlePriceTitle={this.handleSortPriceTitle} size={this.state.size} light={this.state.light} />\n\n          {this.props.list.filter(this.filterItems).length > 0 ?\n            <div>\n              <ProductGrid list={this.props.list.filter(this.filterItems).sort(this.state.sortPrice)} isInCart={false} onSubmit={this.addToCart} />\n            </div>\n            :\n            <div>\n              <p>No results match the filters :(</p>\n            </div>\n          }\n        </div>\n        <div className=\"cart-container\">\n          <Cart contents={this.state.cartContents} subtotal={this.state.total} onSubmit={this.removeFromCart} onIncrease={this.onIncrease} onDecrease={this.onDecrease} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}