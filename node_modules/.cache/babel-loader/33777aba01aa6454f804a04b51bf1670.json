{"ast":null,"code":"var _jsxFileName = \"/Users/mirandamo/Documents/3rd_Year/TA_CS1300/1300Development/src/components/Cart.js\";\nimport React from \"react\";\n/**\n * This class handles calculating the total price of all the items in the cart. \n */\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contents: this.props.cartContents\n    };\n  }\n  /**\n   * This function ensures that the Cart's total is updated the instant an item is added to the Cart. In React, a component only updates * when its state changes. You can pass data from parent to child through props but there is no rerender logic there. Since this.state.* contents is the props of contents from Shop, we have to update this.state.contents within this class for it to rerender. The \n   * componentDidUpdate() API makes sure that calculating the total is the absolutely last thing to be executed. \n   * \n   * TODO: Checks that the prevProps or prevState doesn't equal to the current props and state, then calculate total. \n   */\n\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"My Cart\"));\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/mirandamo/Documents/3rd_Year/TA_CS1300/1300Development/src/components/Cart.js"],"names":["React","Cart","Component","constructor","props","state","contents","cartContents","componentDidUpdate","prevProps","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;AAGA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AADV,KAAb;AAGD;AAED;;;;;;;;AAMAC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CACxC;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAMD;;AAxBgC;;AA2BnC,eAAeV,IAAf","sourcesContent":["import React from \"react\";\n\n/**\n * This class handles calculating the total price of all the items in the cart. \n */\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contents: this.props.cartContents,\n    };\n  }\n\n  /**\n   * This function ensures that the Cart's total is updated the instant an item is added to the Cart. In React, a component only updates * when its state changes. You can pass data from parent to child through props but there is no rerender logic there. Since this.state.* contents is the props of contents from Shop, we have to update this.state.contents within this class for it to rerender. The \n   * componentDidUpdate() API makes sure that calculating the total is the absolutely last thing to be executed. \n   * \n   * TODO: Checks that the prevProps or prevState doesn't equal to the current props and state, then calculate total. \n   */\n  componentDidUpdate(prevProps, prevState) {\n  }\n\n  render() {\n    return (\n      <div className=\"cart\">\n        <h3>My Cart</h3>\n        {/*TODO: Create an instance of the ProductGrid Component that passes props from Shop to Product Grid*/}\n      </div>\n    )\n  }\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}