{"ast":null,"code":"var _jsxFileName = \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/ProductCard.js\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../css/ProductCard.css\";\n/* \nThis class creates a card for each item containing its name, price, size, light, and image. \n*/\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickButton = () => {\n      this.props.onSubmit({\n        name: this.props.name,\n        quantity: this.props.quantity,\n        price: this.props.price,\n        size: this.props.size,\n        light: this.props.light,\n        img: this.props.img\n      });\n    };\n\n    this.onClickPlus = () => {\n      this.props.onIncrease(this.props.name);\n    };\n\n    this.onClickMinus = () => {\n      this.props.onDecrease(this.props.name);\n    };\n\n    this.state = {};\n  }\n  /* \n  The Add to Cart/Remove buttons have access to the functions in the Shop class, and it can directly add and remove an item from the Shopping Cart since the addToCart and removeFromCart functions are passed as props here. Each item's property is also passed to this class as props. \n  */\n\n\n  render() {\n    return React.createElement(Card, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      variant: \"top\",\n      src: this.props.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.name), React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" $\", this.props.price, \" \"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\uD83D\\uDCD0 \", this.props.size), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u2600\\uFE0F \", this.props.light), this.props.isInCart ? // True condition: If the item is in the Cart, then render the quantity adjustment and remove buttons.\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"def-number-input number-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.quantity > 1 ? React.createElement(\"button\", {\n      onClick: this.onClickMinus,\n      className: \"minus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(\"button\", {\n      className: \"no-minus\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"quantity\",\n      name: \"quantity\",\n      value: this.props.quantity,\n      type: \"number\",\n      onChange: event => this.setState({\n        quantity: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onClickPlus,\n      className: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.onClickButton,\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Remove\")) : // False condition: If the item is not in the Cart, then render the Add to Cart button.\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onClickButton,\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Add to Cart\"))));\n  }\n\n}\n\nexport default ProductCard;","map":{"version":3,"sources":["/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/ProductCard.js"],"names":["React","Card","Button","ProductCard","Component","constructor","props","onClickButton","onSubmit","name","quantity","price","size","light","img","onClickPlus","onIncrease","onClickMinus","onDecrease","state","render","isInCart","event","setState","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../css/ProductCard.css\";\n\n/* \nThis class creates a card for each item containing its name, price, size, light, and image. \n*/\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /* \n  The Add to Cart/Remove buttons have access to the functions in the Shop class, and it can directly add and remove an item from the Shopping Cart since the addToCart and removeFromCart functions are passed as props here. Each item's property is also passed to this class as props. \n  */\n  onClickButton = () => {\n    this.props.onSubmit({ name: this.props.name, quantity: this.props.quantity, price: this.props.price, size: this.props.size, light: this.props.light, img: this.props.img });\n  }\n\n  /* \n  The Plus button in a card can increase the item's quantity using the onIncrease function from the Shop class. \n  */\n  onClickPlus = () => {\n    this.props.onIncrease(this.props.name);\n  }\n\n  /* \n  The Minus button in a card can decrease the item's quantity using the onDecrease function from the Shop class. \n  */\n  onClickMinus = () => {\n    this.props.onDecrease(this.props.name);\n  }\n\n  render() {\n    return (\n      <Card className=\"card\">\n        <Card.Img variant=\"top\" src={this.props.img} />\n        <Card.Body>\n          <Card.Text>{this.props.name}</Card.Text>\n          <Card.Title> ${this.props.price} </Card.Title>\n          <Card.Text>üìê {this.props.size}</Card.Text>\n          <Card.Text>‚òÄÔ∏è {this.props.light}</Card.Text>\n          {/* Conditional operator that changes the card's design according to whether it is in the Cart. */}\n          {this.props.isInCart ?\n            // True condition: If the item is in the Cart, then render the quantity adjustment and remove buttons.\n            <div>\n              <div className=\"def-number-input number-input\">\n                {/* Conditional operator that only renders the minus button when there are more than one item.*/}\n                {this.props.quantity > 1 ?\n                  <button onClick={this.onClickMinus} className=\"minus\"></button>\n                  :\n                  <button className=\"no-minus\" disabled={true}></button>\n                }\n                <input className=\"quantity\" name=\"quantity\" value={this.props.quantity} type=\"number\" onChange={event => this.setState({ quantity: event.target.value })} />\n                <button onClick={this.onClickPlus} className=\"plus\"></button>\n              </div>\n              <Button onClick={this.onClickButton} variant=\"primary\">Remove</Button>\n            </div>\n            :\n            // False condition: If the item is not in the Cart, then render the Add to Cart button.\n            <div>\n              <Button onClick={this.onClickButton} variant=\"primary\">Add to Cart</Button>\n            </div>}\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nexport default ProductCard;"]},"metadata":{},"sourceType":"module"}