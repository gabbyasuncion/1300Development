{"ast":null,"code":"import _defineProperty from \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Shop.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"../css/Shop.css\";\nimport ProductGrid from \"./ProductGrid\";\nimport Cart from \"./Cart\";\nimport Header from \"./Header\";\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props); //The state is just a list of key/value pairs (like a hashmap)\n\n    this.onSelectFilterSize = event => {\n      this.setState({\n        size: event\n      });\n    };\n\n    this.onSelectFilterLight = event => {\n      this.setState({\n        light: event\n      });\n    };\n\n    this.matchesFilterSize = item => {\n      if (this.state.size === \"Size\") {\n        return true;\n      } else if (this.state.size === item.size) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.matchesFilterLight = item => {\n      if (this.state.light === \"Light\") {\n        return true;\n      } else if (this.state.light === item.light) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.filterItems = item => {\n      return this.matchesFilterSize(item) && this.matchesFilterLight(item);\n    };\n\n    this.sortLowToHigh = (a, b) => a.price > b.price ? 1 : -1;\n\n    this.sortHighToLow = (a, b) => a.price < b.price ? 1 : -1;\n\n    this.onPriceLowToHigh = () => {\n      let lowToHigh = \"Lowest to Highest\";\n      this.setState({\n        sortPrice: this.sortLowToHigh\n      });\n      this.setState({\n        priceTitle: lowToHigh\n      });\n    };\n\n    this.onPriceHighToLow = () => {\n      let highToLow = \"Highest to Lowest\";\n      this.setState({\n        sortPrice: this.sortHighToLow\n      });\n      this.setState({\n        priceTitle: highToLow\n      });\n    };\n\n    this.onPriceSelect = () => {\n      let select = \"Select\";\n      this.setState({\n        sortPrice: undefined\n      });\n      this.setState({\n        priceTitle: select\n      });\n    };\n\n    this.addToCart = item => {\n      let updatedContents;\n\n      if (this.state.cartContents.some(el => item.name === el.name)) {\n        console.log(el.name);\n        let index = this.state.cartContents.findIndex(el => el.name === item.name);\n        updatedContents = [...this.state.cartContents];\n        updatedContents[index] = _objectSpread({}, updatedContents[index], {\n          quantity: parseFloat(updatedContents[index].quantity) + parseFloat(item.quantity)\n        });\n        this.setState({\n          cartContents: updatedContents\n        });\n      } else {\n        updatedContents = [...this.state.cartContents, item];\n        this.setState({\n          cartContents: updatedContents\n        });\n      } // {console.log(\"newest cart\" + this.state.cartContents[0])} ===> when item is first added to cart, it is undefined; the second time it is added to cart, it exists as index 0.\n\n\n      this.calculateTotal(updatedContents);\n    };\n\n    this.removeFromCart = item => {\n      const updatedContents = this.state.cartContents.filter(el => el.name !== item.name);\n      this.setState({\n        cartContents: updatedContents\n      });\n      this.calculateTotal(updatedContents);\n    };\n\n    this.onDecrease = item => {\n      const itemObject = this.state.cartContents.find(obj => obj.name === item);\n\n      if (itemObject.quantity > 1) {\n        const ind = this.state.cartContents.indexOf(itemObject);\n        this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity - 1;\n      }\n    };\n\n    this.onIncrease = item => {\n      const itemObject = this.state.cartContents.find(obj => obj.name === item);\n      const ind = this.state.cartContents.indexOf(itemObject);\n      this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity + 1;\n    };\n\n    this.calculateTotal = contents => {\n      this.setState({\n        total: contents.reduce((accumulatedTotal, cartItem) => accumulatedTotal + cartItem.price * cartItem.quantity, 0)\n      });\n    };\n\n    this.state = {\n      cartContents: [],\n      size: \"Size\",\n      light: \"Light\",\n      sortPrice: undefined,\n      priceTitle: \"Select\",\n      total: 0\n    };\n  } //Called every time a new Size filter type is selected\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onSelectFilterSize: this.onSelectFilterSize,\n      onSelectFilterLight: this.onSelectFilterLight,\n      onPriceLowToHigh: this.onPriceLowToHigh,\n      onPriceHighToLow: this.onPriceHighToLow,\n      onPriceSelect: this.onPriceSelect,\n      priceTitle: this.state.priceTitle,\n      handlePriceTitle: this.handleSortPriceTitle,\n      size: this.state.size,\n      light: this.state.light,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), this.props.list.filter(this.filterItems).length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ProductGrid, {\n      list: this.props.list.filter(this.filterItems).sort(this.state.sortPrice),\n      isInCart: false,\n      onSubmit: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"No results match the filters :(\"))), React.createElement(\"div\", {\n      className: \"cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Cart, {\n      contents: this.state.cartContents,\n      subtotal: this.state.total,\n      onSubmit: this.removeFromCart,\n      onIncrease: this.onIncrease,\n      onDecrease: this.onDecrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Shop.js"],"names":["React","ProductGrid","Cart","Header","Shop","Component","constructor","props","onSelectFilterSize","event","setState","size","onSelectFilterLight","light","matchesFilterSize","item","state","matchesFilterLight","filterItems","sortLowToHigh","a","b","price","sortHighToLow","onPriceLowToHigh","lowToHigh","sortPrice","priceTitle","onPriceHighToLow","highToLow","onPriceSelect","select","undefined","addToCart","updatedContents","cartContents","some","el","name","console","log","index","findIndex","quantity","parseFloat","calculateTotal","removeFromCart","filter","onDecrease","itemObject","find","obj","ind","indexOf","onIncrease","contents","total","reduce","accumulatedTotal","cartItem","render","handleSortPriceTitle","list","length","sort"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../css/Shop.css\";\nimport ProductGrid from \"./ProductGrid\";\nimport Cart from \"./Cart\";\nimport Header from \"./Header\"\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n    //The state is just a list of key/value pairs (like a hashmap)\n    this.state = {\n      cartContents: [],\n      size: \"Size\",\n      light: \"Light\",\n      sortPrice: undefined,\n      priceTitle: \"Select\",\n      total: 0\n    };\n  }\n\n  //Called every time a new Size filter type is selected\n  onSelectFilterSize = event => {\n    this.setState({ size: event })\n  };\n\n  //Called every time a new Lighting filter type is selected\n  onSelectFilterLight = event => {\n    this.setState({ light: event })\n  };\n\n  // Determine whether the item being passed in matches the Size type that we are filtering on\n  matchesFilterSize = item => {\n    if (this.state.size === \"Size\") {\n      return true\n    } else if (this.state.size === item.size) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // Determine whether the item being passed in matches the Lighting type that we are filtering on\n  matchesFilterLight = item => {\n    if (this.state.light === \"Light\") {\n      return true\n    } else if (this.state.light === item.light) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // Passed into a builtin filter() function. filter() calls this function on every element\n  // in the list. If this function returns true for a given element, filter() will add that element to its\n  // return list, which is the list of filtered plants.  \n  filterItems = item => {\n    return this.matchesFilterSize(item) && this.matchesFilterLight(item);\n  }\n\n  // Compares two plants in the list, and sorts them in price increasing order\n  sortLowToHigh = (a, b) => (a.price > b.price) ? 1 : -1\n  // Compares two plants in the list, and sorts them in price decreasing order\n  sortHighToLow = (a, b) => (a.price < b.price) ? 1 : -1\n\n  // Called when the \"Lowest to Highest\" price filter is selected in the dropdown\n  onPriceLowToHigh = () => {\n    let lowToHigh = \"Lowest to Highest\";\n    this.setState({ sortPrice: this.sortLowToHigh });\n    this.setState({ priceTitle: lowToHigh })\n  }\n\n  // Called when the \"Highest to Lowest\" price filter is selected in the dropdown\n  onPriceHighToLow = () => {\n    let highToLow = \"Highest to Lowest\";\n    this.setState({ sortPrice: this.sortHighToLow });\n    this.setState({ priceTitle: highToLow })\n  }\n\n  // Called when the price filter is reverted to \"Select\" in the dropdown\n  onPriceSelect = () => {\n    let select = \"Select\";\n    this.setState({ sortPrice: undefined });\n    this.setState({ priceTitle: select })\n  }\n\n\n  // This function is called when the user adds an item in the Cactus Shop list to the Shopping Cart. The some() method checks if any of the elements in an array pass a test (provided as a function). Here, it checks whether it matches the name of the plant the user added\n  addToCart = (item) => {\n    let updatedContents;\n    if (this.state.cartContents.some(el => item.name === el.name)) {\n      console.log(el.name);\n      let index = this.state.cartContents.findIndex(el => el.name === item.name);\n      updatedContents = [...this.state.cartContents];\n      updatedContents[index] = { ...updatedContents[index], quantity: parseFloat(updatedContents[index].quantity) + parseFloat(item.quantity) }\n      this.setState({ cartContents: updatedContents });\n    } else {\n      updatedContents = [...this.state.cartContents, item];\n      this.setState({\n        cartContents: updatedContents\n      })\n    }\n    // {console.log(\"newest cart\" + this.state.cartContents[0])} ===> when item is first added to cart, it is undefined; the second time it is added to cart, it exists as index 0.\n    this.calculateTotal(updatedContents);\n  }\n\n  removeFromCart = (item) => {\n    const updatedContents = this.state.cartContents.filter(el => el.name !== item.name);\n    this.setState({\n      cartContents: updatedContents\n    })\n    this.calculateTotal(updatedContents);\n  }\n\n  // TODO: In the product card, you can use the add and minus buttons to change the quantity\n  onDecrease = (item) => {\n    const itemObject = this.state.cartContents.find(obj => obj.name === item);\n    if (itemObject.quantity > 1) {\n      const ind = this.state.cartContents.indexOf(itemObject);\n      this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity - 1;\n    }\n  }\n\n  onIncrease = (item) => {\n    const itemObject = this.state.cartContents.find(obj => obj.name === item);\n    const ind = this.state.cartContents.indexOf(itemObject);\n    this.state.cartContents[ind].quantity = this.state.cartContents[ind].quantity + 1;\n  }\n\n  calculateTotal = contents => {\n    this.setState({\n      total: contents.reduce(\n        (accumulatedTotal, cartItem) =>\n          accumulatedTotal + cartItem.price * cartItem.quantity,\n        0\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"cards-container\">\n          {/* The size and lighting filters, price sort functions are passed to the Header */}\n          <Header onSelectFilterSize={this.onSelectFilterSize} onSelectFilterLight={this.onSelectFilterLight} onPriceLowToHigh={this.onPriceLowToHigh} onPriceHighToLow={this.onPriceHighToLow} onPriceSelect={this.onPriceSelect} priceTitle={this.state.priceTitle} handlePriceTitle={this.handleSortPriceTitle} size={this.state.size} light={this.state.light} />\n\n          {this.props.list.filter(this.filterItems).length > 0 ?\n            <div>\n              <ProductGrid list={this.props.list.filter(this.filterItems).sort(this.state.sortPrice)} isInCart={false} onSubmit={this.addToCart} />\n            </div>\n            :\n            <div>\n              <p>No results match the filters :(</p>\n            </div>\n          }\n        </div>\n        <div className=\"cart-container\">\n          <Cart contents={this.state.cartContents} subtotal={this.state.total} onSubmit={this.removeFromCart} onIncrease={this.onIncrease} onDecrease={this.onDecrease} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}