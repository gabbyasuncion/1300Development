{"ast":null,"code":"var _jsxFileName = \"/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Cart.js\";\nimport React from \"react\";\nimport \"../css/Cart.css\";\nimport { Button, Navbar } from \"react-bootstrap\";\nimport ProductGrid from \"./ProductGrid\";\n/* \nThis class handles calculating the total price of all the items in the cart. \n */\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCheckout = () => {\n      alert(\"Checkout Total: $\" + this.state.total);\n    };\n\n    this.onIncrease = item => {\n      this.props.onIncrease(item);\n      this.setState({\n        total: this.props.contents.reduce((acc, curr) => {\n          return acc + curr.quantity * curr.price;\n        }, 0)\n      });\n    };\n\n    this.onDecrease = item => {\n      this.props.onDecrease(item);\n      this.setState({\n        total: this.props.contents.reduce((acc, curr) => {\n          return acc + curr.quantity * curr.price;\n        }, 0)\n      });\n    };\n\n    this.state = {\n      contents: this.props.contents,\n      total: 0\n    };\n  }\n  /* \n  This function ensures that the Cart's total is updated the instant an item is added to the Cart. \n  */\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.contents !== this.props.contents || prevState.contents !== this.state.contents) {\n      this.setState({\n        contents: this.props.contents\n      });\n      this.setState({\n        total: this.props.contents.reduce((acc, curr) => {\n          return acc + curr.quantity * curr.price;\n        }, 0)\n      });\n    }\n  }\n  /* \n  Creates an alert of the total price when the user clicks the Checkout button. \n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(ProductGrid, {\n      isInCart: true,\n      list: this.props.contents,\n      onSubmit: this.props.onSubmit,\n      onIncrease: this.onIncrease,\n      onDecrease: this.onDecrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Navbar, {\n      className: \"bg-light justify-content-between\",\n      sticky: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Total: $\", this.state.total.toFixed(2)), React.createElement(Button, {\n      onClick: this.onCheckout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Checkout\")));\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/mirandamo/Documents/GitHub/cs1300-development-2020-sln/shopping-app/src/components/Cart.js"],"names":["React","Button","Navbar","ProductGrid","Cart","Component","constructor","props","onCheckout","alert","state","total","onIncrease","item","setState","contents","reduce","acc","curr","quantity","price","onDecrease","componentDidUpdate","prevProps","prevState","render","onSubmit","toFixed"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../css/Cart.css\";\nimport { Button, Navbar } from \"react-bootstrap\";\nimport ProductGrid from \"./ProductGrid\";\n\n/* \nThis class handles calculating the total price of all the items in the cart. \n */\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contents: this.props.contents,\n      total: 0,\n    };\n  }\n\n\n  /* \n  This function ensures that the Cart's total is updated the instant an item is added to the Cart. \n  */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.contents !== this.props.contents || prevState.contents !== this.state.contents) {\n      this.setState({ contents: this.props.contents });\n      this.setState({\n        total: this.props.contents.reduce((acc, curr) => {\n          return acc + curr.quantity * curr.price;\n        }, 0)\n      });\n    }\n  }\n\n  /* \n  Creates an alert of the total price when the user clicks the Checkout button. \n  */\n  onCheckout = () => {\n    alert(\"Checkout Total: $\" + this.state.total);\n  }\n\n  /* \n   * Recalculates the Cart's total price when the user increases the item's quantity. \n   * Input: An element from your List component\n   * Output: updated total price of Cart\n  */\n  onIncrease = item => {\n    this.props.onIncrease(item);\n    this.setState({\n      total: this.props.contents.reduce((acc, curr) => {\n        return acc + curr.quantity * curr.price;\n      }, 0)\n    });\n  }\n\n  /* \n  Recalculates the Cart's total price when the user decreases an item's quantity. \n  Input: An element from your List component\n  Output: updated total price of Cart\n  */\n  onDecrease = item => {\n    this.props.onDecrease(item);\n    this.setState({\n      total: this.props.contents.reduce((acc, curr) => {\n        return acc + curr.quantity * curr.price;\n      }, 0)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"cart\">\n        <h3>Shopping Cart</h3>\n        {/* For items in the Cart, pass the list of contents, addToCard function, and removeFromCart function from Shop to ProductGrid. This also pass the total price recalulations on increasing and decreasing quantity to ProductGrid. */}\n        <ProductGrid isInCart={true} list={this.props.contents} onSubmit={this.props.onSubmit} onIncrease={this.onIncrease} onDecrease={this.onDecrease} />\n        <Navbar className=\"bg-light justify-content-between\" sticky=\"bottom\">\n          <Navbar.Brand>Total: ${(this.state.total).toFixed(2)}</Navbar.Brand>\n          <Button onClick={this.onCheckout}>Checkout</Button>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}